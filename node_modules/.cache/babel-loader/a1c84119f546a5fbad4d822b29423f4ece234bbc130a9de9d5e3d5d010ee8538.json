{"ast":null,"code":"var _jsxFileName = \"/Users/chae/Dev/VSCode/abb-test/src/TeamInputPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TeamInputPage() {\n  _s();\n  const [teamName, setTeamName] = useState(\"\");\n  const [responseMsg, setResponseMsg] = useState(\"\");\n  const handleInputChange = event => {\n    setTeamName(event.target.value);\n  };\n  const generateAuthHash = () => {\n    const message = \"test\";\n    const secretKey = \"YOUR_SECRET_KEY\"; // 여기에 서버에서 제공받은 시크릿 키를 넣어야 합니다.\n    const hmac = crypto.createHmac(\"sha256\", secretKey);\n    hmac.update(message);\n    const authHash = hmac.digest(\"base64\");\n    return authHash;\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    // Step 1: auth API 호출\n    const authUrl = \"http://118.67.134.151/hackathon/api/auth\";\n    const authRequest = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        message: \"test\",\n        authHash: generateAuthHash()\n      })\n    };\n    try {\n      const authResponse = await fetch(authUrl, authRequest);\n      const authData = await authResponse.json();\n      if (authData.code === 1000) {\n        // Step 2: save API 호출\n        const saveUrl = \"http://118.67.134.151/hackathon/api/save\";\n        const saveRequest = {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            teamName: teamName\n          })\n        };\n        const saveResponse = await fetch(saveUrl, saveRequest);\n        const saveData = await saveResponse.json();\n\n        // 성공적인 응답 메시지를 상태에 저장\n        setResponseMsg(saveData.msg);\n      } else {\n        setResponseMsg(\"인증 실패\");\n      }\n    } catch (error) {\n      setResponseMsg(\"API 호출 오류: \" + error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD300\\uBA85 \\uC785\\uB825 \\uD398\\uC774\\uC9C0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"\\uD300\\uBA85:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: teamName,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uC804\\uC1A1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: responseMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(TeamInputPage, \"QAHlbRnM1SsUQso14P8y5nOUHXA=\");\n_c = TeamInputPage;\nexport default TeamInputPage;\nvar _c;\n$RefreshReg$(_c, \"TeamInputPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TeamInputPage","_s","teamName","setTeamName","responseMsg","setResponseMsg","handleInputChange","event","target","value","generateAuthHash","message","secretKey","hmac","crypto","createHmac","update","authHash","digest","handleSubmit","preventDefault","authUrl","authRequest","method","headers","body","JSON","stringify","authResponse","fetch","authData","json","code","saveUrl","saveRequest","saveResponse","saveData","msg","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","_c","$RefreshReg$"],"sources":["/Users/chae/Dev/VSCode/abb-test/src/TeamInputPage.js"],"sourcesContent":["import React, { useState } from \"react\";\nfunction TeamInputPage() {\n  const [teamName, setTeamName] = useState(\"\");\n  const [responseMsg, setResponseMsg] = useState(\"\");\n\n  const handleInputChange = (event) => {\n    setTeamName(event.target.value);\n  };\n\n  const generateAuthHash = () => {\n    const message = \"test\";\n    const secretKey = \"YOUR_SECRET_KEY\"; // 여기에 서버에서 제공받은 시크릿 키를 넣어야 합니다.\n    const hmac = crypto.createHmac(\"sha256\", secretKey);\n    hmac.update(message);\n    const authHash = hmac.digest(\"base64\");\n    return authHash;\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    // Step 1: auth API 호출\n    const authUrl = \"http://118.67.134.151/hackathon/api/auth\";\n    const authRequest = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        message: \"test\",\n        authHash: generateAuthHash(),\n      }),\n    };\n\n    try {\n      const authResponse = await fetch(authUrl, authRequest);\n      const authData = await authResponse.json();\n\n      if (authData.code === 1000) {\n        // Step 2: save API 호출\n        const saveUrl = \"http://118.67.134.151/hackathon/api/save\";\n        const saveRequest = {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ teamName: teamName }),\n        };\n\n        const saveResponse = await fetch(saveUrl, saveRequest);\n        const saveData = await saveResponse.json();\n\n        // 성공적인 응답 메시지를 상태에 저장\n        setResponseMsg(saveData.msg);\n      } else {\n        setResponseMsg(\"인증 실패\");\n      }\n    } catch (error) {\n      setResponseMsg(\"API 호출 오류: \" + error.message);\n    }\n  };\n\n  return (\n    <div>\n      <h1>팀명 입력 페이지</h1>\n      <form onSubmit={handleSubmit}>\n        <label>\n          팀명:\n          <input type=\"text\" value={teamName} onChange={handleInputChange} />\n        </label>\n        <button type=\"submit\">전송</button>\n      </form>\n      <p>{responseMsg}</p>\n    </div>\n  );\n}\n\nexport default TeamInputPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}