{"ast":null,"code":"var _jsxFileName = \"/Users/chae/Dev/VSCode/abb-test/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { auth } from \"./api\";\nimport cryptoJs from \"crypto-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [teamName, setTeamName] = useState(\"\");\n  const handleInputChange = e => {\n    setTeamName(e.target.value);\n  };\n  const generateAuthHash = () => {\n    // const message = \"test\";\n    // const secretKey = \"NHVzLwHNeIXuNIiXerePIGVj5kzJmJYA\";\n    // const hmac = crypto.createHmac(\"sha256\", secretKey);\n    // hmac.update(message);\n    // const authHash = hmac.digest(\"base64\");\n    // return authHash;\n    const message = \"test\";\n    const secretKey = \"NHVzLwHNeIXuNIiXerePIGVj5kzJmJYA\";\n    const hmac = cryptoJs.HmacSHA256(message, secretKey);\n    const authHash = cryptoJs.enc.Base64.stringify(hmac);\n    return authHash;\n  };\n  const handleSubmit = async e => {\n    const authData = {\n      message: \"test\",\n      authHash: generateAuthHash()\n    };\n    const authRes = auth(authData);\n    console.log(authRes);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"\\uD300\\uBA85:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: teamName,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uC804\\uC1A1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ziC2taj2//S1Ui9HPIvbxZCbF2c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","auth","cryptoJs","jsxDEV","_jsxDEV","App","_s","teamName","setTeamName","handleInputChange","e","target","value","generateAuthHash","message","secretKey","hmac","HmacSHA256","authHash","enc","Base64","stringify","handleSubmit","authData","authRes","console","log","children","onSubmit","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/chae/Dev/VSCode/abb-test/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport { auth } from \"./api\";\nimport cryptoJs from \"crypto-js\";\n\nfunction App() {\n  const [teamName, setTeamName] = useState(\"\");\n\n  const handleInputChange = (e) => {\n    setTeamName(e.target.value);\n  };\n\n  const generateAuthHash = () => {\n    // const message = \"test\";\n    // const secretKey = \"NHVzLwHNeIXuNIiXerePIGVj5kzJmJYA\";\n    // const hmac = crypto.createHmac(\"sha256\", secretKey);\n    // hmac.update(message);\n    // const authHash = hmac.digest(\"base64\");\n    // return authHash;\n    const message = \"test\";\n    const secretKey = \"NHVzLwHNeIXuNIiXerePIGVj5kzJmJYA\";\n    const hmac = cryptoJs.HmacSHA256(message, secretKey);\n    const authHash = cryptoJs.enc.Base64.stringify(hmac);\n    return authHash;\n  };\n\n  const handleSubmit = async (e) => {\n    const authData = {\n      message: \"test\",\n      authHash: generateAuthHash(),\n    };\n    const authRes = auth(authData);\n    console.log(authRes);\n  };\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <label>\n          팀명:\n          <input type=\"text\" value={teamName} onChange={handleInputChange} />\n        </label>\n        <button type=\"submit\">전송</button>\n      </form>\n      {/* <p>{responseMsg}</p> */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,IAAI,QAAQ,OAAO;AAC5B,OAAOC,QAAQ,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMS,iBAAiB,GAAIC,CAAC,IAAK;IAC/BF,WAAW,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7B,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B;IACA;IACA;IACA;IACA;IACA;IACA,MAAMC,OAAO,GAAG,MAAM;IACtB,MAAMC,SAAS,GAAG,kCAAkC;IACpD,MAAMC,IAAI,GAAGd,QAAQ,CAACe,UAAU,CAACH,OAAO,EAAEC,SAAS,CAAC;IACpD,MAAMG,QAAQ,GAAGhB,QAAQ,CAACiB,GAAG,CAACC,MAAM,CAACC,SAAS,CAACL,IAAI,CAAC;IACpD,OAAOE,QAAQ;EACjB,CAAC;EAED,MAAMI,YAAY,GAAG,MAAOZ,CAAC,IAAK;IAChC,MAAMa,QAAQ,GAAG;MACfT,OAAO,EAAE,MAAM;MACfI,QAAQ,EAAEL,gBAAgB,CAAC;IAC7B,CAAC;IACD,MAAMW,OAAO,GAAGvB,IAAI,CAACsB,QAAQ,CAAC;IAC9BE,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;EACtB,CAAC;EACD,oBACEpB,OAAA;IAAAuB,QAAA,eACEvB,OAAA;MAAMwB,QAAQ,EAAEN,YAAa;MAAAK,QAAA,gBAC3BvB,OAAA;QAAAuB,QAAA,GAAO,eAEL,eAAAvB,OAAA;UAAOyB,IAAI,EAAC,MAAM;UAACjB,KAAK,EAAEL,QAAS;UAACuB,QAAQ,EAAErB;QAAkB;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9D,CAAC,eACR9B,OAAA;QAAQyB,IAAI,EAAC,QAAQ;QAAAF,QAAA,EAAC;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEJ,CAAC;AAEV;AAAC5B,EAAA,CAzCQD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AA2CZ,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}